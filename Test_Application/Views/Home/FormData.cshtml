@model Test_Application.Models.TestDataModel
@{
    Layout = null;
    List<SelectListItem> Citys = new List<SelectListItem>() {
                    new SelectListItem() {
                    Text = "Ahmedabad",
                    Value = "Ahmedabad"},
                    new SelectListItem() {
                    Text = "Surat",
                    Value = "Surat"},
                    new SelectListItem() {
                    Text = "Baroda",
                    Value = "Baroda"}
           };
}
@Scripts.Render("~/bundles/jqueryval")
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Fill Data</h4>
</div>

<div class="modal-body">
    
    @using (Html.BeginForm("FormData", "Home", FormMethod.Post, new { @id = "frmData" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model=>model.City, new List<SelectListItem>() {
                        new SelectListItem() {
                        Text = "Ahmedabad",
                        Value = "Ahmedabad"},
                        new SelectListItem() {
                        Text = "Surat",
                        Value = "Surat"},
                        new SelectListItem() {
                        Text = "Baroda",
                        Value = "Baroda"}
               }, "Select City",
                        new { @class = "form-control",})
                    @*<select name="model.City" class="form-control required" required>
                            <option value="">Select Tax</option>
                            @foreach (SelectListItem c in Citys)
                            {
                                <option value="@c.Value" @(c.Value == Model.City.ToString() ? "selected" : "")>@c.Text</option>
                            }
                        </select>*@
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <div class="checkbox">
                        @Html.RadioButtonFor(model => model.Gender, true)
                        Male
                        @Html.RadioButtonFor(model => model.Gender, false)
                        Female
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mobile, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextBoxFor(model => model.mobile, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.mobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-9">
                    <button class="btn btn-primary" id="btnSave" onclick="Save()">Save</button>
                    <button class="btn btn-danger" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('input[type=datetime]').datepicker({
            dateFormat: "dd-M-yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-60:+0"
        });
    });
</script>